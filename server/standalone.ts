import dotenv from "dotenv";
import { createApp, connectToDatabase } from './index';

dotenv.config();

async function startStandaloneServer() {
  const PORT = 3001;
  console.log('üöÄ Starting Standalone Express Server...');

  try {
    const { app, httpServer } = createApp();

    try {
      const dbConnected = await connectToDatabase();
      console.log(dbConnected ? '‚úÖ Database connected' : '‚ö†Ô∏è Using mock data');
    } catch (error) {
      console.warn('‚ö†Ô∏è Database failed, continuing with mock data');
    }

    httpServer.listen(PORT, () => {
      console.log(`‚úÖ API Server running on port ${PORT}`);
      console.log(`üß™ Test: http://localhost:${PORT}/api/auth/test`);
      console.log(`üîó Health check: http://localhost:${PORT}/api/ping`);
    });

    // Handle server errors
    httpServer.on('error', (error: any) => {
      console.error('‚ùå Server error:', error.message);
      if (error.code === 'EADDRINUSE') {
        console.error(`‚ùå Port ${PORT} is already in use`);
        process.exit(1);
      }
    });

  } catch (error: any) {
    console.error('‚ùå Failed to create server:', error.message);
    process.exit(1);
  }
}

startStandaloneServer().catch(console.error);
